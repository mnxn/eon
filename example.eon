type a = b
type c = ^d
type e = [f]
type g = [h;3]
type i = (j) -> k

type l {}
type m {
    o: p,
    q: r
}

func t(): u = v

func w(x: y): z = {
    let x: y = z;
    a;
    ();
    true;
    false;
    1.0;
    "string";
    [1,2,3];
    Record { a = b, c = d};
    xs[0];
    record.field;
    target <- source;
    f(x, y);
    !a;
    -b;
    &c;
    ^d;
    a && b;
    a || b;
    a == b;
    a != b;
    a < b;
    a <= b;
    a > b;
    a >= b;
    a + b;
    a - b;
    a * b;
    a / b;
    a % b;
    { };
    { a };
    { a; b };
    if a then b else c;
    if a then b else if c then d else e;
    func (x: y): z -> { x };
    0
}
